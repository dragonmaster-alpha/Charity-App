"""empty message

Revision ID: 6d8ff731ee20
Revises: 3af6af05179d
Create Date: 2020-02-27 08:52:14.590215

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6d8ff731ee20'
down_revision = '3af6af05179d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('CharityCard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=31), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('cvc', sa.String(length=11), nullable=True),
    sa.Column('expiration', sa.String(length=7), nullable=True),
    sa.Column('fp_token', sa.String(length=31), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Charity.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CustomerCard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=31), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('cvc', sa.String(length=11), nullable=True),
    sa.Column('expiration', sa.String(length=7), nullable=True),
    sa.Column('fp_token', sa.String(length=31), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Customer.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Card')
    op.drop_constraint('BankAccount_charity_id_fkey', 'BankAccount', type_='foreignkey')
    op.create_foreign_key(None, 'BankAccount', 'Charity', ['charity_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('CustomerCharity_customer_id_fkey', 'CustomerCharity', type_='foreignkey')
    op.drop_constraint('CustomerCharity_charity_id_fkey', 'CustomerCharity', type_='foreignkey')
    op.create_foreign_key(None, 'CustomerCharity', 'Customer', ['customer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'CustomerCharity', 'Charity', ['charity_id'], ['id'], ondelete='CASCADE')
    op.drop_column('Plan', 'fp_payment_plan_id')
    op.add_column('TransactionDonation', sa.Column('bq_amount', sa.Float(), nullable=True))
    op.add_column('TransactionDonation', sa.Column('bq_description', sa.String(length=255), nullable=True))
    op.add_column('TransactionDonation', sa.Column('bq_postDate', sa.DateTime(), nullable=True))
    op.add_column('TransactionDonation', sa.Column('bq_title', sa.String(length=255), nullable=True))
    op.add_column('TransactionDonation', sa.Column('donat_amount', sa.Float(), nullable=True))
    op.drop_constraint('TransactionDonation_weekly_donation_id_fkey', 'TransactionDonation', type_='foreignkey')
    op.drop_constraint('TransactionDonation_customer_id_fkey', 'TransactionDonation', type_='foreignkey')
    op.drop_constraint('TransactionDonation_charity_id_fkey', 'TransactionDonation', type_='foreignkey')
    op.create_foreign_key(None, 'TransactionDonation', 'Charity', ['charity_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'TransactionDonation', 'Customer', ['customer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'TransactionDonation', 'WeeklyDonation', ['weekly_donation_id'], ['id'], ondelete='CASCADE')
    op.drop_column('TransactionDonation', 'amount')
    op.drop_constraint('WeeklyDonation_charity_id_fkey', 'WeeklyDonation', type_='foreignkey')
    op.create_foreign_key(None, 'WeeklyDonation', 'Charity', ['charity_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'WeeklyDonation', type_='foreignkey')
    op.create_foreign_key('WeeklyDonation_charity_id_fkey', 'WeeklyDonation', 'Charity', ['charity_id'], ['id'])
    op.add_column('TransactionDonation', sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'TransactionDonation', type_='foreignkey')
    op.drop_constraint(None, 'TransactionDonation', type_='foreignkey')
    op.drop_constraint(None, 'TransactionDonation', type_='foreignkey')
    op.create_foreign_key('TransactionDonation_charity_id_fkey', 'TransactionDonation', 'Charity', ['charity_id'], ['id'])
    op.create_foreign_key('TransactionDonation_customer_id_fkey', 'TransactionDonation', 'Customer', ['customer_id'], ['id'])
    op.create_foreign_key('TransactionDonation_weekly_donation_id_fkey', 'TransactionDonation', 'WeeklyDonation', ['weekly_donation_id'], ['id'])
    op.drop_column('TransactionDonation', 'donat_amount')
    op.drop_column('TransactionDonation', 'bq_title')
    op.drop_column('TransactionDonation', 'bq_postDate')
    op.drop_column('TransactionDonation', 'bq_description')
    op.drop_column('TransactionDonation', 'bq_amount')
    op.add_column('Plan', sa.Column('fp_payment_plan_id', sa.VARCHAR(length=31), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'CustomerCharity', type_='foreignkey')
    op.drop_constraint(None, 'CustomerCharity', type_='foreignkey')
    op.create_foreign_key('CustomerCharity_charity_id_fkey', 'CustomerCharity', 'Charity', ['charity_id'], ['id'])
    op.create_foreign_key('CustomerCharity_customer_id_fkey', 'CustomerCharity', 'Customer', ['customer_id'], ['id'])
    op.drop_constraint(None, 'BankAccount', type_='foreignkey')
    op.create_foreign_key('BankAccount_charity_id_fkey', 'BankAccount', 'Charity', ['charity_id'], ['id'])
    op.create_table('Card',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Card_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('number', sa.VARCHAR(length=31), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cvc', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('fp_token', sa.VARCHAR(length=31), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expiration', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='Card_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Card_pkey')
    )
    op.drop_table('CustomerCard')
    op.drop_table('CharityCard')
    # ### end Alembic commands ###
